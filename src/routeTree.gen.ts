/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as DashboardCoursesIndexImport } from './routes/_dashboard/courses/index'
import { Route as DashboardCoursesCourseUuidImport } from './routes/_dashboard/courses/$courseUuid'

// Create Virtual Routes

const DashboardIndexLazyImport = createFileRoute('/_dashboard/')()

// Create/Update Routes

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  id: '/_dashboard/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_dashboard/index.lazy').then((d) => d.Route),
)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardCoursesIndexRoute = DashboardCoursesIndexImport.update({
  id: '/_dashboard/courses/',
  path: '/courses/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardCoursesCourseUuidRoute = DashboardCoursesCourseUuidImport.update(
  {
    id: '/_dashboard/courses/$courseUuid',
    path: '/courses/$courseUuid',
    getParentRoute: () => rootRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/courses/$courseUuid': {
      id: '/_dashboard/courses/$courseUuid'
      path: '/courses/$courseUuid'
      fullPath: '/courses/$courseUuid'
      preLoaderRoute: typeof DashboardCoursesCourseUuidImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/courses/': {
      id: '/_dashboard/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof DashboardCoursesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof DashboardIndexLazyRoute
  '/courses/$courseUuid': typeof DashboardCoursesCourseUuidRoute
  '/courses': typeof DashboardCoursesIndexRoute
}

export interface FileRoutesByTo {
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof DashboardIndexLazyRoute
  '/courses/$courseUuid': typeof DashboardCoursesCourseUuidRoute
  '/courses': typeof DashboardCoursesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_dashboard/': typeof DashboardIndexLazyRoute
  '/_dashboard/courses/$courseUuid': typeof DashboardCoursesCourseUuidRoute
  '/_dashboard/courses/': typeof DashboardCoursesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/courses/$courseUuid'
    | '/courses'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/courses/$courseUuid'
    | '/courses'
  id:
    | '__root__'
    | '/auth/login'
    | '/auth/register'
    | '/_dashboard/'
    | '/_dashboard/courses/$courseUuid'
    | '/_dashboard/courses/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  DashboardIndexLazyRoute: typeof DashboardIndexLazyRoute
  DashboardCoursesCourseUuidRoute: typeof DashboardCoursesCourseUuidRoute
  DashboardCoursesIndexRoute: typeof DashboardCoursesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  DashboardIndexLazyRoute: DashboardIndexLazyRoute,
  DashboardCoursesCourseUuidRoute: DashboardCoursesCourseUuidRoute,
  DashboardCoursesIndexRoute: DashboardCoursesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/auth/login",
        "/auth/register",
        "/_dashboard/",
        "/_dashboard/courses/$courseUuid",
        "/_dashboard/courses/"
      ]
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/_dashboard/": {
      "filePath": "_dashboard/index.lazy.tsx"
    },
    "/_dashboard/courses/$courseUuid": {
      "filePath": "_dashboard/courses/$courseUuid.ts"
    },
    "/_dashboard/courses/": {
      "filePath": "_dashboard/courses/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
